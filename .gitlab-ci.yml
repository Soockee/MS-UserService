image: docker:19.03.12

variables:
  # When using dind service, we need to instruct docker to talk with
  # the daemon started inside of the service. The daemon is available
  # with a network connection instead of the default
  # /var/run/docker.sock socket. Docker 19.03 does this automatically
  # by setting the DOCKER_HOST in
  # https://github.com/docker-library/docker/blob/d45051476babc297257df490d22cbd806f1b11e4/19.03/docker-entrypoint.sh#L23-L29
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services.
  #
  # Specify to Docker where to create the certificates, Docker will
  # create them automatically on boot, and will create
  # `/certs/client` that will be shared between the service and job
  # container, thanks to volume mount from config.toml
  DOCKER_TLS_CERTDIR: "/certs"
  # see https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled for Dind configuration
  # DOCKER_HOST: tcp://docker:2375 --> this should only be configured when using Kubernetes runners
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
  # see usage of Namespaces at https://docs.gitlab.com/ee/user/group/#namespaces
  REGISTRY_GROUP_PROJECT: $CI_REGISTRY/root/microservices-ss2021
  
  API_VERSION: v1
  #NEXT_API_VERSION: v2
  GITLAB_BASE_URL: git.thm.de


services:
  - docker:19.03.12-dind

stages:
  - build
  #- before_deploy
  - deploy
  - clean

build:
  stage: build
  tags:
    - ms
  only:
    - master
  variables:
    IMAGE_TAG: $CI_REGISTRY_MS/userservice:$CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER_MS -p $CI_REGISTRY_PASSWORD_MS $CI_REGISTRY_MS
    - docker build --no-cache -f Dockerfile -t $IMAGE_TAG  .
    - docker push $IMAGE_TAG

deploy:
  stage: deploy
  tags:
    - ms
  only:
    - master
  script:
    -  docker stack deploy -c docker-compose.yml --with-registry-auth user
 
clean:
  stage: clean
  tags:
    - ms
  only:
    - master
  script:
    - docker container prune -f
    - docker image prune -f
 